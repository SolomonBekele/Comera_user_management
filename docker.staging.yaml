version: "3.9"

services:
  user-db-staging:
    image: mysql:8.0
    container_name: user-db-staging
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_db
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -proot"]
      interval: 5s
      retries: 10
    volumes:
      - mysqldata-staging:/var/lib/mysql
    networks:
      - backend-staging

  app-staging:
    build: .
    image: solomonbekele/user-management-system:2.0 
    container_name: node-app-staging
    restart: on-failure
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=staging
      - DB_HOST=user-db-staging
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=user_db
      - PORT=3003
      - JWT_SECRET=USER_SECRET
      - REFRESH_SECRET=USER_REFRESH_SECRET
      - STORAGE_TYPE=sequelize
      - RUN_MIGRATIONS=true
      - RUN_SEEDS=true
    depends_on:
      user-db-staging:
        condition: service_healthy
    networks:
      - backend-staging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        until nc -z user-db-staging 3306; do sleep 2; done &&
        echo 'Database is ready!' &&
        npx sequelize-cli db:migrate &&
        npx sequelize-cli db:seed:all &&
        npm start
      "

  flyway-staging:
    image: flyway/flyway:latest
    depends_on:
      user-db-staging:
        condition: service_healthy
    command: -url=jdbc:mysql://user-db-staging:3306/user_db -user=root -password=root migrate
    volumes:
      - ./fly-migrations:/flyway/sql
    networks:
      - backend-staging

  elasticsearch-staging:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: elasticsearch-staging
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - backend-staging
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 30s
      retries: 5

  kibana-staging:
    image: docker.elastic.co/kibana/kibana:8.14.0
    container_name: kibana-staging
    depends_on:
      elasticsearch-staging:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch-staging:9200
    ports:
      - "5601:5601"
    networks:
      - backend-staging

volumes:
  mysqldata-staging:

networks:
  backend-staging:
    driver: bridge
